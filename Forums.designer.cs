#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace affsbook
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="adsrush")]
	public partial class ForumsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTable_Affsbook_Forum_Thread(Table_Affsbook_Forum_Thread instance);
    partial void UpdateTable_Affsbook_Forum_Thread(Table_Affsbook_Forum_Thread instance);
    partial void DeleteTable_Affsbook_Forum_Thread(Table_Affsbook_Forum_Thread instance);
    #endregion
		
		public ForumsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["adsrushConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ForumsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ForumsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ForumsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ForumsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Table_Affsbook_Forum_Thread> Table_Affsbook_Forum_Threads
		{
			get
			{
				return this.GetTable<Table_Affsbook_Forum_Thread>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Table_Affsbook_Forum_Threads")]
	public partial class Table_Affsbook_Forum_Thread : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _thread_id;
		
		private System.Nullable<System.DateTime> _startdate;
		
		private System.Nullable<int> _authoraid;
		
		private string _autherusername;
		
		private string _subject;
		
		private string _body;
		
		private System.Nullable<int> _replynumber;
		
		private System.Nullable<int> _replyaid;
		
		private string _replyusername;
		
		private string _niche1;
		
		private string _niche2;
		
		private string _niche3;
		
		private System.Nullable<int> _replies;
		
		private System.Nullable<int> _views;
		
		private System.Nullable<System.DateTime> _the_reply_date;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onthread_idChanging(System.Nullable<int> value);
    partial void Onthread_idChanged();
    partial void OnstartdateChanging(System.Nullable<System.DateTime> value);
    partial void OnstartdateChanged();
    partial void OnauthoraidChanging(System.Nullable<int> value);
    partial void OnauthoraidChanged();
    partial void OnautherusernameChanging(string value);
    partial void OnautherusernameChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnreplynumberChanging(System.Nullable<int> value);
    partial void OnreplynumberChanged();
    partial void OnreplyaidChanging(System.Nullable<int> value);
    partial void OnreplyaidChanged();
    partial void OnreplyusernameChanging(string value);
    partial void OnreplyusernameChanged();
    partial void Onniche1Changing(string value);
    partial void Onniche1Changed();
    partial void Onniche2Changing(string value);
    partial void Onniche2Changed();
    partial void Onniche3Changing(string value);
    partial void Onniche3Changed();
    partial void OnrepliesChanging(System.Nullable<int> value);
    partial void OnrepliesChanged();
    partial void OnviewsChanging(System.Nullable<int> value);
    partial void OnviewsChanged();
    partial void Onthe_reply_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onthe_reply_dateChanged();
    #endregion
		
		public Table_Affsbook_Forum_Thread()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thread_id", DbType="Int")]
		public System.Nullable<int> thread_id
		{
			get
			{
				return this._thread_id;
			}
			set
			{
				if ((this._thread_id != value))
				{
					this.Onthread_idChanging(value);
					this.SendPropertyChanging();
					this._thread_id = value;
					this.SendPropertyChanged("thread_id");
					this.Onthread_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> startdate
		{
			get
			{
				return this._startdate;
			}
			set
			{
				if ((this._startdate != value))
				{
					this.OnstartdateChanging(value);
					this.SendPropertyChanging();
					this._startdate = value;
					this.SendPropertyChanged("startdate");
					this.OnstartdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_authoraid", DbType="Int")]
		public System.Nullable<int> authoraid
		{
			get
			{
				return this._authoraid;
			}
			set
			{
				if ((this._authoraid != value))
				{
					this.OnauthoraidChanging(value);
					this.SendPropertyChanging();
					this._authoraid = value;
					this.SendPropertyChanged("authoraid");
					this.OnauthoraidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_autherusername", DbType="NVarChar(500)")]
		public string autherusername
		{
			get
			{
				return this._autherusername;
			}
			set
			{
				if ((this._autherusername != value))
				{
					this.OnautherusernameChanging(value);
					this.SendPropertyChanging();
					this._autherusername = value;
					this.SendPropertyChanged("autherusername");
					this.OnautherusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(1500)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(4000)")]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replynumber", DbType="Int")]
		public System.Nullable<int> replynumber
		{
			get
			{
				return this._replynumber;
			}
			set
			{
				if ((this._replynumber != value))
				{
					this.OnreplynumberChanging(value);
					this.SendPropertyChanging();
					this._replynumber = value;
					this.SendPropertyChanged("replynumber");
					this.OnreplynumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replyaid", DbType="Int")]
		public System.Nullable<int> replyaid
		{
			get
			{
				return this._replyaid;
			}
			set
			{
				if ((this._replyaid != value))
				{
					this.OnreplyaidChanging(value);
					this.SendPropertyChanging();
					this._replyaid = value;
					this.SendPropertyChanged("replyaid");
					this.OnreplyaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replyusername", DbType="NVarChar(500)")]
		public string replyusername
		{
			get
			{
				return this._replyusername;
			}
			set
			{
				if ((this._replyusername != value))
				{
					this.OnreplyusernameChanging(value);
					this.SendPropertyChanging();
					this._replyusername = value;
					this.SendPropertyChanged("replyusername");
					this.OnreplyusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niche1", DbType="NVarChar(500)")]
		public string niche1
		{
			get
			{
				return this._niche1;
			}
			set
			{
				if ((this._niche1 != value))
				{
					this.Onniche1Changing(value);
					this.SendPropertyChanging();
					this._niche1 = value;
					this.SendPropertyChanged("niche1");
					this.Onniche1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niche2", DbType="NVarChar(500)")]
		public string niche2
		{
			get
			{
				return this._niche2;
			}
			set
			{
				if ((this._niche2 != value))
				{
					this.Onniche2Changing(value);
					this.SendPropertyChanging();
					this._niche2 = value;
					this.SendPropertyChanged("niche2");
					this.Onniche2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_niche3", DbType="NVarChar(500)")]
		public string niche3
		{
			get
			{
				return this._niche3;
			}
			set
			{
				if ((this._niche3 != value))
				{
					this.Onniche3Changing(value);
					this.SendPropertyChanging();
					this._niche3 = value;
					this.SendPropertyChanged("niche3");
					this.Onniche3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_replies", DbType="Int")]
		public System.Nullable<int> replies
		{
			get
			{
				return this._replies;
			}
			set
			{
				if ((this._replies != value))
				{
					this.OnrepliesChanging(value);
					this.SendPropertyChanging();
					this._replies = value;
					this.SendPropertyChanged("replies");
					this.OnrepliesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_views", DbType="Int")]
		public System.Nullable<int> views
		{
			get
			{
				return this._views;
			}
			set
			{
				if ((this._views != value))
				{
					this.OnviewsChanging(value);
					this.SendPropertyChanging();
					this._views = value;
					this.SendPropertyChanged("views");
					this.OnviewsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_the_reply_date", DbType="Date")]
		public System.Nullable<System.DateTime> the_reply_date
		{
			get
			{
				return this._the_reply_date;
			}
			set
			{
				if ((this._the_reply_date != value))
				{
					this.Onthe_reply_dateChanging(value);
					this.SendPropertyChanging();
					this._the_reply_date = value;
					this.SendPropertyChanged("the_reply_date");
					this.Onthe_reply_dateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
